<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>小鑫</title>
  
  <subtitle>小鑫的技术专栏</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-06-06T05:47:10.930Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>小鑫</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2019/06/06/%E7%A5%9E%E7%AE%AD%E6%89%8B%E4%BA%91%E7%88%AC%E8%99%AB/"/>
    <id>http://yoursite.com/2019/06/06/神箭手云爬虫/</id>
    <published>2019-06-06T04:04:18.153Z</published>
    <updated>2019-06-06T05:47:10.930Z</updated>
    
    <content type="html"><![CDATA[<p>分为：  入口页，帮助页，内容页</p><p>入口页： scanUrl     爬虫网页的入口</p><p>帮助页：helperurl  一帮包含大量的内容页（列表），多数情况下事业个内容列表，也叫列表页</p><p>内容页:  contentUrl 承载了我们关心的数据，只在这种网页上做数据抽取，对于需要的部分数据显示在列表上，通过urlContent来解决</p><h2 id="待爬队列"><a href="#待爬队列" class="headerlink" title="待爬队列"></a><strong>待爬队列</strong></h2><p>scanUrl队列： 存放入口类型的Url，configs.scanUrl,定义的链接会放在此队列中，回调可以通过：site.addScanUrl添加链接到此队列中</p><p>contentUrl队列：此队列中存放内容页类型的链接，自动链接发现以及site.addUrl的时候，通过正则表达式来判断链接类型，如果是内容页，则将会加到此链接中</p><p>普通队列：一般存放的都是帮助页类型的链接，自动链接发现以及site.addUrl 的时候，通过正则表达式来判断链接类型，如果不是内容页，将会加到此队列中</p><p> 失败队列：一种特殊的队列，用来存放处理失败的链接。</p><h2 id="链接调度"><a href="#链接调度" class="headerlink" title="链接调度"></a><strong>链接调度</strong></h2><p>一次调度一个链接：默认情况下<br>contentUrl队列&gt;普通队列&gt;scanUrl队列</p><p>当configs.entriesFirst为true时，调度优先级为：<br>scanUrl队列&gt;contentUrl队列&gt;普通队列</p><p>在链接调度过程中，如果遇到了处理失败的情况： 首先会触发链接的重试（此链接会被重新加载到队列中），当重试次数（入口页：5次；帮助页：3次；内容页2次）仍然失败时，此链接就会被放到失败链接，当其他所有队列都为空时，失败队列里面的链接再重试一次，这些链接重试完成后，爬虫结束。</p><h2 id="链接去重"><a href="#链接去重" class="headerlink" title="链接去重"></a><strong>链接去重</strong></h2><p>网站之中链接存在循环，爬虫在爬去的过程中，如果不做控制，很容易陷入死循环。</p><p>比较好的方式就是对已经处理过的链接做标记，进行去重处理，（因为大部分处理过的链接不需要再处理一次，另一方面避免爬虫进入死循环）</p><p>对于GET类型的请求：平台使用链接本身去重，但是!!!!平台不会对#做处理，<br><a href="http://www.baidu.com/和" target="_blank" rel="noopener">www.baidu.com/和</a> <a href="http://www.baidu.com/#是两个不同的链接" target="_blank" rel="noopener">www.baidu.com/#是两个不同的链接</a></p><p>对于POST请求，使用链接+参数的方式去重，也就是说对于同一链接，如果post的参数不一样，平台会认为是两个不同的链接<br>==HTTP的header不会作为去重的依据==</p><h2 id="爬虫的生命周期"><a href="#爬虫的生命周期" class="headerlink" title="爬虫的生命周期"></a>爬虫的生命周期</h2><p><img src="https://s2.ax1x.com/2019/06/06/VaMoIU.png" alt="爬虫生命周期"></p><h2 id="链接生命周期"><a href="#链接生命周期" class="headerlink" title="链接生命周期"></a>链接生命周期</h2><p><img src="https://s2.ax1x.com/2019/06/06/VawCHe.png" alt="爬虫生命周期"></p><p>configs对象<br>  configs属性：<br>domains    String 数组   不可为空<br>    定义爬虫爬去哪些域名下的网页，链接发现的时候会检查链接的域名，如果不是这些域名下的链接，则会被忽略。<br>       scanUrl     String 数组<br>   爬虫入口的链接，这是给爬虫添加入口的简单方式，这种方式添加的都是GET方式的请求。<br> 不设置此属性，在initCrawl回调函数中调用site.addScanUrl，也可以达到添加入口页链接的目的。<br>以下情况只能在initCrawl回调函数中调用site.addScanUrl才能实现：<br>1.如果需要添加POST请求的入口页链接，只能通过site.addScanUrl来添加。<br>2.scanUrls数组长度的限制是1000个，超过1000个的部分将会被忽略；这种情况需要把添加入口链接的工作放到initCrawl回调函数中来做。<br>         contentUrlRegexes  String 数组或正则数组<br>      定义内容页的链接正则，爬虫会根据这些正则来判断一个链接是否是内容页链接。<br>可以使字符串形式的正则，也可以是javaScript的正则，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">//写法一：js原生正则（建议使用这种写法）</span><br><span class="line">[/http:\/\/club2011\.auto\.163\.com\/post\/\d+\.html.*/]</span><br><span class="line">//写法二：正则的字符串形式</span><br><span class="line">[&quot;http://club2011\\.auto\\.163\\.com/post/\\d+\\.html.*&quot;]</span><br><span class="line">//写法三：通过字符串形式new一个js正则对象</span><br><span class="line">[new RegExp(&quot;http://club2011\\.auto\\.163\\.com/post/\\d+\\.html.*&quot;)]</span><br></pre></td></tr></table></figure><p>1.正则可以写多个，一个链接只要能匹配到其中的任意一个正则，该链接就会被认为是内容链接<br>2.不设置或设置为空数组，则所有的链接都是内容页链接。<br>helperUrlRegexes String数组或正则数组<br>    定义帮助页的链接正则，爬虫会根据这些正则来判断一个链接是否是帮助页链接。<br>属性同内容页正则属性相同；<br>fields filed对象或数组 不可为空<br>定义爬取结构的数据字段，一个field定义出一个字段。  </p><h2 id="interval-整数"><a href="#interval-整数" class="headerlink" title="interval  整数"></a>interval  整数</h2><p>两个链接之间的处理间隔，单位是毫秒，默认值是1000，既1秒。可设置的最小值是1000.<br> 一般保持默认值即可，如果反扒严重，可适当加大此值。</p><h2 id="timeout-整数"><a href="#timeout-整数" class="headerlink" title="timeout 整数"></a>timeout 整数</h2><pre><code>每个请求的默认超时时间。单位是毫秒，默认值是5000，即5秒。</code></pre><p>   一般保持默认值即可，如果目标网站比较卡，经常超时，可以适当加大此值，如果设置过小，会导致所有的请求都超时。<br>注意：！1.这是全局超时时间，对于没有特殊指定超时时间的请求，超时时间都是这个值。<br>2.对于开启自动Js渲染的页面，在渲染过程中会自动发出很多其他js，css等的请求，这些请求的超时时间都是这个值（（既这个值代表了超时的所有的时长  ））</p><h2 id="enableJS-布尔类型"><a href="#enableJS-布尔类型" class="headerlink" title="enableJS 布尔类型"></a>enableJS 布尔类型</h2><pre><code>是否默认开启自动Js渲染。默认值是false。</code></pre><p>这是一个全局设置，在处理具体的请求时，如果该请求有设置options.enableJS，则此值被覆盖。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">var configs = &#123;</span><br><span class="line">  enableJS: false</span><br><span class="line">&#125;;</span><br><span class="line">configs.initCrawl = function(site) &#123;</span><br><span class="line">  site.addUrl(&quot;http://www.baidu.com&quot;);//该请求不会自动JS渲染</span><br><span class="line">  site.addUrl(&quot;http://tieba.baidu.com&quot;, &#123;</span><br><span class="line">    enableJS: true</span><br><span class="line">  &#125;);//该请求将会自动JS渲染</span><br><span class="line"></span><br><span class="line">  site.requestUrl(&quot;http://music.baidu.com&quot;);//该请求不会自动JS渲染</span><br><span class="line">  site.requestUrl(&quot;http://index.baidu.com&quot;, &#123;</span><br><span class="line">    enableJS: true</span><br><span class="line">  &#125;);//该请求将会自动JS渲染</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">var configs = &#123;</span><br><span class="line">  enableJS: true</span><br><span class="line">&#125;;</span><br><span class="line">configs.initCrawl = function(site) &#123;</span><br><span class="line">  site.addUrl(&quot;http://www.baidu.com&quot;, &#123;</span><br><span class="line">    enableJS: false</span><br><span class="line">  &#125;);//该请求不会自动JS渲染</span><br><span class="line">  site.addUrl(&quot;http://tieba.baidu.com&quot;);//该请求将会自动JS渲染</span><br><span class="line"></span><br><span class="line">  site.requestUrl(&quot;http://music.baidu.com&quot;, &#123;</span><br><span class="line">    enableJS: false</span><br><span class="line">  &#125;);//该请求不会自动JS渲染</span><br><span class="line">  site.requestUrl(&quot;http://index.baidu.com&quot;);//该请求将会自动JS渲染</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="JsEngine-枚举类型"><a href="#JsEngine-枚举类型" class="headerlink" title="JsEngine 枚举类型"></a>JsEngine 枚举类型</h2><pre><code>使用哪种JS引擎来渲染页面。默认值为JSEngine.PhantomJS</code></pre><ul><li>JSEngine.PhantomJs 使用phantomjs作为渲染引擎</li><li>JSEngine.HtmlUnit 使用HtmlUnit作为渲染引擎</li></ul><p>注：！</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">1.HtmlUnit目前兼容性相对差一些</span><br><span class="line">     2.phantomjs单个网页最长渲染2分钟</span><br><span class="line">entriesFirst 布尔类型</span><br><span class="line">     是否优先处理待爬队列中的scanUrl队列，默认值是false</span><br><span class="line">userAgent 枚举类型</span><br><span class="line">     爬虫在发请求时使用的UserAgent类型。默认值为userAgent.Computer</span><br><span class="line">UserAgent.Computer 使用电脑浏览器的UserAgent</span><br><span class="line">UserAgent.Android 使用Android手机的UserAgent</span><br><span class="line">UserAgent.iOS 使用苹果手机的UserAgent</span><br><span class="line">UserAgent.Mobile 使用手机的UserAgent</span><br><span class="line">UserAgent.Empty 不使用UserAgent</span><br></pre></td></tr></table></figure><h2 id="acceptHttpStatus-整数数组"><a href="#acceptHttpStatus-整数数组" class="headerlink" title="acceptHttpStatus 整数数组"></a>acceptHttpStatus 整数数组</h2><pre><code>添加下载网页时可以接受的HTTP返回码。默认接收的返回码包括200、201、202、203、204、205、206、207、208、226、301、302，通过此属性添加可以接受的返回码。</code></pre><p>autoFindUrls 布尔类型<br>    是否自动发现链接。默认值为true。此值实际上只影响onProcessScanPage，onPrcessHelperPage,onProcessContentPage这三个回调函数的默认返回值，最终是否会自动发现链接，还是由着三个回调函数的返回值决定的</p><h2 id="field对象"><a href="#field对象" class="headerlink" title="field对象"></a>field对象</h2><p>name String 类型 不可为空<br>注意：！<br>    1.名字中不能包含英文句点，既.。<br>    2.同意层级名字不能重复。<br>    3.为了更好的兼容性（尤其是数据库发布，名字建议不要使用中文，命名尽量符合变量名（标识符）的命名规则）<br>    4.此值讲作为抽取项的标识，如果中途做了修改，将导致之前的数据无法读出该字段。</p><h2 id="alias-String-类型"><a href="#alias-String-类型" class="headerlink" title="alias String 类型"></a>alias String 类型</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">     抽取项的别名：一般起中文别名，方便数据查看，只影响网页的显示，课随意修改</span><br><span class="line"></span><br><span class="line">selectorType 枚举类型</span><br><span class="line">      抽取规则的类型，默认值是selectorType.XPath</span><br><span class="line"></span><br><span class="line">SelectorType.XPath 一般针对html网页或xml</span><br><span class="line">SelectorType.JsonPath 针对json数据</span><br><span class="line">SelectorType.Regex 可以针对一切文本</span><br></pre></td></tr></table></figure><h2 id="selector-String-类型"><a href="#selector-String-类型" class="headerlink" title="selector String 类型"></a>selector String 类型</h2><pre><code>抽取规则</code></pre><p>   注意：<br>如果selector为空或者未设置，则抽取的值为null，在进行required的判定之前，仍会进行afterExtractField回调。</p><p>required 布尔类型<br>     标识当前抽取项的值是否必须（不能为空），默认是false，可以为空<br> 抽取过程中，如果某个不能为控制的抽取项，抽取出来的结果是空值，则当前网页的数据抽取会立即结束，抽取结果会被丢弃<br>   注意：！<br>1.抽取规则可以抽取多条，但是repeated是false，最终的值是抽取结果里面的第一个。<br>2.抽取队则只抽取一条，但是repeated是true，那么抽取结果还是数组，数组值包含一个元素。</p><p>children field对象数组<br>     抽取项的子抽取项。<br>    field支持子项，可以设置多层级，方便数据以本身的层级方式存储，而不是全部展开到第一层级。<br> 注意：！<br>第一层field默认从当前网页内容中抽取，而子项默认从父项的内容中抽取。</p><p>primaryKey 布尔类型<br>     当前抽取项是否作为整条数据的主键组成部分，默认是false。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;分为：  入口页，帮助页，内容页&lt;/p&gt;
&lt;p&gt;入口页： scanUrl     爬虫网页的入口&lt;/p&gt;
&lt;p&gt;帮助页：helperurl  一帮包含大量的内容页（列表），多数情况下事业个内容列表，也叫列表页&lt;/p&gt;
&lt;p&gt;内容页:  contentUrl 承载了我们关心的
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2019/06/04/hello-world/"/>
    <id>http://yoursite.com/2019/06/04/hello-world/</id>
    <published>2019-06-04T04:15:15.448Z</published>
    <updated>2019-06-04T04:15:15.449Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
